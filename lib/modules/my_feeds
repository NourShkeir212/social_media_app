import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:conditional_builder/conditional_builder.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:socialapp2/layout/cubit/cubit.dart';
import 'package:socialapp2/layout/cubit/states.dart';
import 'package:socialapp2/layout/layout_screen.dart';
import 'package:socialapp2/model/comment_model.dart';
import 'package:socialapp2/model/post_model.dart';
import 'package:socialapp2/model/user_model.dart';
import 'package:socialapp2/modules/comment_screen/comments.dart';

import 'package:socialapp2/shared/components/components.dart';
import 'package:socialapp2/shared/status_components/no_post.dart';
import '../../layout/app_cubit/cubit.dart';
import '../../shared/status_components/no_inernet.dart';
import '../../shared/styles/colors.dart';
import '../../shared/styles/icon_broken.dart';
import '../new_post/new_post_screen.dart';


class FeedsScreen extends StatelessWidget {
  const FeedsScreen({Key key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    var scaffoldKey = GlobalKey<ScaffoldState>();
    bool themeMode = AppCubit.get(context).isDark;
     return Builder(

       builder: (context){
         SocialCubit.get(context).posts=[];
         SocialCubit.get(context).getPosts();
         return BlocConsumer<SocialCubit,SocialStates>(
           listener: (context,state){},
           builder: (context,state)
           {
             return ConditionalBuilder(
               condition: SocialCubit.get(context).internet=='Internet',
               fallback: (context)=>NoInternetConnection(context,LayoutScreen()),
               builder: (context)=>ConditionalBuilder(
                 condition:state is! SocialGetPostsLoadingState,
                 builder: (context)=> ConditionalBuilder(
                   fallback: (context)=>NoPostFound(context),
                   condition: SocialCubit.get(context).posts.isNotEmpty && SocialCubit.get(context).userModel != null,
                   builder:(context)=> SingleChildScrollView(
                     physics: const BouncingScrollPhysics(),
                     child: Column(
                       children:
                       [
                         Card(
                           elevation: 5.0,
                           margin: const EdgeInsets.all(8.0),
                           clipBehavior: Clip.antiAliasWithSaveLayer,
                           child: Stack(
                               alignment: AlignmentDirectional.bottomEnd,
                               children:[
                                 const Image(
                                   image: NetworkImage(
                                       "https://image.freepik.com/free-photo/horizontal-shot-smiling-curly-haired-woman-indicates-free-space-demonstrates-place-your-advertisement-attracts-attention-sale-wears-green-turtleneck-isolated-vibrant-pink-wall_273609-42770.jpg"),
                                   fit: BoxFit.cover,
                                   height: 200.0,
                                   width: double.infinity,
                                 ),
                                 Padding(
                                   padding: const EdgeInsets.all(8.0),
                                   child: Text(
                                       "communicate with friends",
                                       style: Theme.of(context).textTheme.subtitle1.copyWith(
                                         color: Colors.white,
                                       )
                                   ),
                                 ),
                               ]
                           ),
                         ),
                         if(SocialCubit.get(context).posts !=null)
                           ListView.separated(
                               reverse: true,
                               shrinkWrap: true,
                               physics: const NeverScrollableScrollPhysics(),
                               itemBuilder: (context,index) {
                                 return buildPostItem(
                                   SocialCubit
                                       .get(context)
                                       .posts[index],
                                   context,
                                   index,
                                   key: scaffoldKey,
                                 );
                               },
                               separatorBuilder: (context,index)=>const SizedBox(height: 8.0,),
                               itemCount: SocialCubit.get(context).posts.length
                           ),
                         if(SocialCubit.get(context).posts !=null)
                           const SizedBox(height: 8.0,)
                       ],
                     ),
                   ),
                 ),
                 fallback: (context)=> const Center(child: CircularProgressIndicator(),)
               ),
             );
           },
         );
       },
      );
  }

  Widget buildPostItem(PostModel model,context,index,{GlobalKey<ScaffoldState> key})=> Card(
      elevation: 5.0,
      clipBehavior: Clip.antiAliasWithSaveLayer,
      margin: const EdgeInsets.symmetric(horizontal: 8.0),
      child: Padding(
        padding: const EdgeInsets.all(10.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            //post header
            Row(
              children: [
                CircleAvatar(
                  radius: 25.0,
                  backgroundImage: NetworkImage(model.image),
                ),
                const SizedBox(
                  width: 15.0,
                ),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children:
                    [
                      Row(
                        children:  [
                          Text(
                            model.name,
                            style: TextStyle(
                                height: 1.4,
                                color: AppCubit.get(context).isDark?Colors.white : Colors.black
                            ),
                          ),
                          const SizedBox(width: 5,),
                          const Icon(
                            Icons.check_circle,
                            color: defaultColor,
                            size: 16.0,
                          )
                        ],
                      ),
                      Text(
                        model.dateTime,
                        style: Theme.of(context).textTheme.caption.copyWith(
                            height: 1.4,
                            color: Colors.grey[400]
                        ),
                      )
                    ],
                  ),
                ),
                const SizedBox(
                  width: 15.0,
                ),
                IconButton(
                  onPressed: (){},
                  icon:  Icon(
                    Icons.more_horiz,
                    size: 16.0,
                    color: AppCubit.get(context).isDark?Colors.white : Colors.black,
                  ),
                )
              ],
            ),
            //Divider
            Padding(
              padding: const EdgeInsets.symmetric(
                  vertical: 15.0
              ),
              child: Container(
                width: double.infinity,
                height: 1.0,
                color: Colors.grey[300],
              ),
            ),
            //post Body
            Text(
              model.text,
              style: Theme.of(context).textTheme.subtitle1,

            ),
            //tags
           /* Padding(
              padding: const EdgeInsets.only(
                  top: 5.0
              ),
              child: Container(
                width: double.infinity,
                child: Wrap(
                  children: [
                    Padding(
                      padding: const EdgeInsetsDirectional.only(
                          end: 6.0
                      ),
                      child: Container(
                        height: 25.0,
                        child: MaterialButton(
                          minWidth: 1.0,
                          padding: EdgeInsets.zero,
                          onPressed: (){},
                          child: Text(
                              "#Software",
                              style: Theme.of(context).textTheme.caption.copyWith(
                                color: defaultColor,
                              )
                          ),
                        ),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsetsDirectional.only(
                          end: 6.0
                      ),
                      child: Container(
                        height: 25.0,
                        child: MaterialButton(
                          minWidth: 1.0,
                          padding: EdgeInsets.zero,
                          onPressed: (){},
                          child: Text(
                              "#Flutter",
                              style: Theme.of(context).textTheme.caption.copyWith(
                                color: defaultColor,
                              )
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),*/
            //image
            if(model.postImage != '')
            Padding(
              padding: const EdgeInsetsDirectional.only(
                top: 15.0
              ),
              child: Container(
                width: double.infinity,
                height: 140.0,
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(4.0),
                  image: DecorationImage(
                    fit: BoxFit.cover,
                    image: NetworkImage(
                     model.postImage
                    ),
                  ),
                ),
              ),
            ),
            // likes and comment
            Padding(
              padding: const EdgeInsets.symmetric(vertical: 5.0),
              child: Row(
                children:
                [
                  Expanded(
                    child: InkWell(
                      onTap: (){},
                      child: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 5.0),
                        child: Row(
                          children:
                          [
                            const  Icon(
                              IconBroken.Heart,
                              size: 18.0,
                              color: Colors.red,
                            ),
                           const SizedBox(width: 5.0,),
                            Text(
                              '${SocialCubit.get(context).likes[index]}',
                              style: Theme.of(context).textTheme.caption.copyWith(
                                color: AppCubit.get(context).isDark?Colors.white : Colors.black,
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                  ),
                  Expanded(
                    child: InkWell(
                      onTap: (){
                      },
                      child: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 5.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children:
                          [
                            const Icon(
                              IconBroken.Chat,
                              size: 18.0,
                              color: Colors.amber,
                            ),
                            const SizedBox(width: 5.0,),
                            Text(
                              "${SocialCubit.get(context).comments[index]} comments",
                              style: Theme.of(context).textTheme.caption.copyWith(
                                color: AppCubit.get(context).isDark?Colors.white : Colors.black,
                              )
                            )
                          ],
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(bottom: 10.0),
              child: Container(
                width: double.infinity,
                height: 1.0,
                color: Colors.grey[300],
              ),
            ),
            // my comment and likes
            Row(
              children: [
                Expanded(
                  child:  InkWell(
                    onTap: (){
                      navigateTo(context,  CommentsScreen(index: index,));
                    },
                    child: Row(
                      children: [
                        CircleAvatar(
                          radius: 18.0,
                          backgroundImage: NetworkImage(
                            SocialCubit.get(context).userModel.image
                          ),
                        ),
                        const SizedBox(
                          width: 15.0,
                        ),
                        Text(
                            "write a comment ...",
                            style: Theme.of(context).textTheme.caption.copyWith(
                              color: Colors.grey[300]
                            )
                        ),
                      ],
                    ),
                  ),
                ),
                InkWell(
                  onTap: (){
                    print('click ${SocialCubit.get(context).postsId[index]}');
                    SocialCubit.get(context).likePost(postId: SocialCubit.get(context).postsId[index]);
                  },
                  child: Row(
                    children:
                    [
                      const Icon(
                        IconBroken.Heart,
                        size: 18.0,
                        color: Colors.red,
                      ),
                      const SizedBox(width: 5.0,),
                      Text(
                        "Like",
                        style: Theme.of(context).textTheme.caption.copyWith(
                          color: AppCubit.get(context).isDark?Colors.white : Colors.black,
                        ),
                      )
                    ],
                  ),
                ),
              ],
            ),
          ],
        ),
      )
  );
      // Widget userComments(context,index){
      //   return ListView.separated(
      //     shrinkWrap: true,
      //     itemCount: 1,
      //     itemBuilder: (context,index) =>  Padding(
      //       padding: const EdgeInsets.all(10.0),
      //       child: Row(
      //         children: [
      //           CircleAvatar(
      //             radius: 25.0,
      //             backgroundImage: NetworkImage(SocialCubit.get(context).userModel.image),
      //           ),
      //           const SizedBox(
      //             width: 15.0,
      //           ),
      //           Expanded(
      //             child: Column(
      //               crossAxisAlignment: CrossAxisAlignment.start,
      //               children:
      //               [
      //                 Row(
      //                   children:  [
      //                     Row(
      //                       children: [
      //                         Text(
      //                           SocialCubit.get(context).userModel.name,
      //                           style: TextStyle(
      //                               height: 1.4,
      //                               color: AppCubit.get(context).isDark?Colors.white : Colors.black
      //                           ),
      //                         ),
      //                         Text(
      //                          '1',
      //                           style: TextStyle(
      //                               height: 1.4,
      //                               color: AppCubit.get(context).isDark?Colors.white : Colors.grey[500]
      //                           ),
      //                         ),
      //                       ],
      //                     ),
      //                     const SizedBox(width: 5,),
      //                     const Icon(
      //                       Icons.check_circle,
      //                       color: defaultColor,
      //                       size: 16.0,
      //                     )
      //                   ],
      //                 ),
      //                 Text(
      //                  '',
      //                   style: Theme.of(context).textTheme.caption.copyWith(
      //                       height: 1.4,
      //                       color: Colors.grey[400]
      //                   ),
      //                 )
      //               ],
      //             ),
      //           ),
      //         ],
      //       ),
      //     ),
      //     separatorBuilder: (context,index)=>const SizedBox(height: 8.0,),
      //   );
      // }
}
